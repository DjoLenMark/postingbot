import os
import logging
import asyncio
from aiohttp import web
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")

# === –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
user_sessions = {}

# === Telegram Handlers ===

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_sessions[user_id] = {"step": 1, "media": {}, "text": ""}
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç.")

async def handle_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    session = user_sessions.get(user_id, {"step": 1, "media": {}, "text": ""})

    message = update.message
    text = message.caption or message.text or ""
    photo = message.photo[-1].file_id if message.photo else None
    video = message.video.file_id if message.video else None

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if text:
        session["text"] = text
    if photo:
        session["media"]["photo"] = photo
    if video:
        session["media"]["video"] = video

    session["step"] = 2
    user_sessions[user_id] = session

    await update.message.reply_text(
    "üóì –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.\n\n"
    "üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å, –∫–Ω–æ–ø–∫–∞ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å' –∏ –ø–æ–ª–µ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã."
)

# === AIOHTTP ping-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render ===

async def handle_ping(request):
    return web.Response(text="pong")

async def start_ping_server():
    app = web.Application()
    app.add_routes([web.get("/", handle_ping), web.get("/ping", handle_ping)])
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", 8080)
    await site.start()
    logging.info("üöÄ AIOHTTP ping-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")

# === Main ===

async def main():
    await start_ping_server()

    application = ApplicationBuilder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT | filters.PHOTO | filters.VIDEO, handle_media))

    logging.info("ü§ñ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ polling")
    await application.run_polling()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        logging.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: " + str(e))
